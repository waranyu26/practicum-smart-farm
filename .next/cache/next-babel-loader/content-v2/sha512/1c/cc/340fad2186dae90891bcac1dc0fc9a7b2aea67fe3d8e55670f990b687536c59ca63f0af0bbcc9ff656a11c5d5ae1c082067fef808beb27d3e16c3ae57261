{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mark26/Documents/Class Work/Practicum/practicum-smart-farm/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mark26/Documents/Class Work/Practicum/practicum-smart-farm/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mark26/Documents/Class Work/Practicum/practicum-smart-farm/components/body.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Card from './card';\nimport CardAlarm from './card-alarm';\nimport axios from 'axios';\nimport { fetchData } from '../lib/api'; // import Chart from './chart'\n\nimport dynamic from 'next/dynamic';\nvar Chart = dynamic(_c = function _c() {\n  return import('./chart');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./chart')];\n    },\n    modules: ['./chart']\n  }\n});\n_c2 = Chart;\n\nvar useInterval = function useInterval(callback, delay) {\n  _s();\n\n  var savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nvar Body = function Body(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState(2000),\n      intervalTime = _useState[0],\n      setIntervalTime = _useState[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetchData();\n\n          case 2:\n            res = _context.sent;\n            console.log(\"HERE\");\n            console.log(\"HERE\", res);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Temperature\",\n      level: 10,\n      statusId: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Humidity\",\n      level: 20,\n      statusId: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(CardAlarm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, _this);\n};\n\n_s2(Body, \"JyJVE+vV6BapLEhl1ctd+DSCk9g=\");\n\n_c3 = Body;\nexport default Body;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Chart$dynamic\");\n$RefreshReg$(_c2, \"Chart\");\n$RefreshReg$(_c3, \"Body\");","map":{"version":3,"sources":["/Users/mark26/Documents/Class Work/Practicum/practicum-smart-farm/components/body.js"],"names":["React","useEffect","useRef","useState","Card","CardAlarm","axios","fetchData","dynamic","Chart","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","Body","children","intervalTime","setIntervalTime","res","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,IAAMC,KAAK,GAAGD,OAAO,MAAC;AAAA,SAAM,OAAO,SAAP,CAAN;AAAA,CAAD;AAAA;AAAA;AAAA,kCAAc,SAAd;AAAA;AAAA,cAAc,SAAd;AAAA;AAAA,EAArB;MAAMC,K;;AAEN,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,KAAX,EAAqB;AAAA;;AACvC,MAAMC,aAAa,GAAGX,MAAM,EAA5B,CADuC,CAGvC;;AACAD,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAJuC,CAQvC;;AACAV,EAAAA,SAAS,CAAC,YAAM;AACd,aAASc,IAAT,GAAgB;AACdF,MAAAA,aAAa,CAACC,OAAd;AACD;;AACD,QAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAII,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOH,KAAP,CAApB;AACA,aAAO;AAAA,eAAMM,aAAa,CAACF,EAAD,CAAnB;AAAA,OAAP;AACD;AACF,GARQ,EAQN,CAACJ,KAAD,CARM,CAAT;AASD,CAlBD;;GAAMF,W;;AAqBN,IAAMS,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAEWjB,QAAQ,CAAC,IAAD,CAFnB;AAAA,MAEtBkB,YAFsB;AAAA,MAERC,eAFQ;;AAI7BrB,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUM,SAAS,EADnB;;AAAA;AACFgB,YAAAA,GADE;AAERC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAIN,EAJM,CAAT;AAMA,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACL,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,aAAZ;AAA0B,MAAA,KAAK,EAAE,EAAjC;AAAqC,MAAA,QAAQ,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA,aADK,eAEL,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAE,EAA9B;AAAkC,MAAA,QAAQ,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,aAFK,eAGL,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,aAHK,eAIL,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,aAJK;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAMD,CAhBD;;IAAMJ,I;;MAAAA,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Card from './card'\nimport CardAlarm from './card-alarm'\nimport axios from 'axios';\nimport { fetchData } from '../lib/api'\n\n// import Chart from './chart'\nimport dynamic from 'next/dynamic'\nconst Chart = dynamic(() => import('./chart'))\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n\nconst Body = ({ children }) => {\n\n  const [intervalTime, setIntervalTime] = useState(2000);\n\n  useEffect(async () => {\n    const res = await fetchData();\n    console.log(\"HERE\")\n    console.log(\"HERE\", res)\n  }, []);\n\n  return <div className=\"flex flex-wrap\">\n    <Card title=\"Temperature\" level={10} statusId={0} />\n    <Card title=\"Humidity\" level={20} statusId={2} />\n    <CardAlarm />\n    <Chart />\n  </div>\n}\n\nexport default Body\n"]},"metadata":{},"sourceType":"module"}