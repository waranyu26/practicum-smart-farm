{"ast":null,"code":"import axios from 'axios';\nimport { API_ENDPOINT } from './constants';\nexport const fetchData = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINT + '/getdata');\n    const lastIndex0 = response.data.Temp.length - 1;\n    const lastIndex1 = response.data.Soil_Moisture.length - 1;\n    return [response.data.Temp[lastIndex0], response.data.Soil_Moisture[lastIndex1]];\n  } catch (err) {\n    console.error(err);\n    return [0, 0];\n  }\n};\nexport const toggleAlarm = async id => {\n  try {\n    console.log(\"TOGGLE \" + id);\n    await axios.get(API_ENDPOINT + `/buzzer/${id}`);\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["/Users/mark26/Documents/Class Work/Practicum/practicum-smart-farm/lib/api.js"],"names":["axios","API_ENDPOINT","fetchData","response","get","lastIndex0","data","Temp","length","lastIndex1","Soil_Moisture","err","console","error","toggleAlarm","id","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;AACnC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAUH,YAAY,GAAG,UAAzB,CAAvB;AACA,UAAMI,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,MAAnB,GAA4B,CAA/C;AACA,UAAMC,UAAU,GAAGN,QAAQ,CAACG,IAAT,CAAcI,aAAd,CAA4BF,MAA5B,GAAqC,CAAxD;AACA,WAAO,CAACL,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBF,UAAnB,CAAD,EAAiCF,QAAQ,CAACG,IAAT,CAAcI,aAAd,CAA4BD,UAA5B,CAAjC,CAAP;AACD,GALD,CAMA,OAAOE,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;AACF,CAXM;AAaP,OAAO,MAAMG,WAAW,GAAG,MAAOC,EAAP,IAAc;AACvC,MAAI;AACFH,IAAAA,OAAO,CAACI,GAAR,CAAY,YAAYD,EAAxB;AACA,UAAMf,KAAK,CAACI,GAAN,CAAUH,YAAY,GAAI,WAAUc,EAAG,EAAvC,CAAN;AACD,GAHD,CAIA,OAAOJ,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM","sourcesContent":["import axios from 'axios';\nimport { API_ENDPOINT } from './constants'\n\nexport const fetchData = async () => {\n  try {\n    const response = await axios.get(API_ENDPOINT + '/getdata');\n    const lastIndex0 = response.data.Temp.length - 1;\n    const lastIndex1 = response.data.Soil_Moisture.length - 1;\n    return [response.data.Temp[lastIndex0], response.data.Soil_Moisture[lastIndex1]];\n  }\n  catch (err) {\n    console.error(err);\n    return [0, 0]\n  }\n}\n\nexport const toggleAlarm = async (id) => {\n  try {\n    console.log(\"TOGGLE \" + id)\n    await axios.get(API_ENDPOINT + `/buzzer/${id}`);\n  }\n  catch (err) {\n    console.error(err);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}