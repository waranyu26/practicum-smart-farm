{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Card from './card';\nimport CardAlarm from './card-alarm';\nimport axios from 'axios';\nimport { fetchData } from '../lib/api';\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nconst Body = ({\n  children\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState([0, 0]);\n  const {\n    0: intervalTime,\n    1: setIntervalTime\n  } = useState(2000);\n  useInterval(async () => {\n    const res = await fetchData();\n    setData(res);\n    setTimeout(() => {}, 500);\n  }, intervalTime);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"flex flex-wrap\",\n    children: [/*#__PURE__*/_jsx(Card, {\n      title: \"Temperature\",\n      level: data[0],\n      unit: \"\\xB0C\",\n      goodInterval: [20, 30],\n      outerRange: 5\n    }), /*#__PURE__*/_jsx(Card, {\n      title: \"Humidity\",\n      level: data[1],\n      unit: \"%\",\n      goodInterval: [36, 70],\n      outerRange: 10\n    }), /*#__PURE__*/_jsx(CardAlarm, {})]\n  });\n};\n\nexport default Body;","map":null,"metadata":{},"sourceType":"module"}